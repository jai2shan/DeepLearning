%reset -f
import pandas as pd,os, numpy as np

os.chdir(r'C:\Users\Jayasankar.RS\Desktop\Deep_Learning_A_Z\Volume 1 - Supervised Deep Learning\Part 1 - Artificial Neural Networks (ANN)')
ds = pd.read_csv('Section 2 - Part 1 - ANN\Churn_Modelling.csv')
#%% Data Preparation
y = ds.iloc[:,13].values
X = ds.iloc[:,3:13].values

## Encode the categorical Data
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
labelencoder_X_1 = LabelEncoder()
labelencoder_X_2 = LabelEncoder()
X[:,1] = labelencoder_X_1.fit_transform(X[:,1])
X[:,2] = labelencoder_X_2.fit_transform(X[:,2])
X
onehotencoder = OneHotEncoder(categorical_features = [1])
X = onehotencoder.fit_transform(X).toarray()
X = X[:,1:]
## Splitting Dataset into train and test
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.25,
                                                    random_state =0)

## Feature Scaling
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test  = sc.fit_transform(X_test)

#%% Creating Layers
import keras
from keras.models import Sequential
from keras.layers import Dense

classifier = Sequential()

## Adding Input layer -  Hidden Layer 1
classifier.add(Dense(output_dim = 6,init = 'uniform',activation = 'relu',input_dim = 11))

## Hidden Layer 2
classifier.add(Dense(output_dim = 6,init = 'uniform',activation = 'relu'))

## Output Layer
classifier.add(Dense(output_dim = 1,init = 'uniform',activation = 'sigmoid'))

#%% Compiling ANN
classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy',metrics = ['accuracy'])

#%% Fitting ANN
classifier.fit(X_train,y_train,batch_size = 10, epochs = 100)

#%%
y_pred = classifier.predict(X_test)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test,np.where(y_pred>0.5,1,0))
cm
(254+1902)/(254+1902+89+255)
